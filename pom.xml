<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

   <modelVersion>4.0.0</modelVersion>

   <!-- ********************************************** -->
   <!-- ***************** PARENT POM ***************** -->
   <!-- ********************************************** -->

   <parent>
      <groupId>com.bernardomg.maven</groupId>
      <artifactId>base-pom</artifactId>
      <version>1.4.0</version>
   </parent>

   <!-- ********************************************** -->
   <!-- **************** PROJECT INFO **************** -->
   <!-- ********************************************** -->

   <groupId>com.bernardomg.example</groupId>
   <artifactId>no-sql-spring-example</artifactId>
   <version>1.0.1</version>
   <packaging>war</packaging>

   <name>Spring MVC Project</name>
   <description>Example combining Spring, Angular and d3</description>
   <url>https://github.com/bernardo-mg/no-sql-spring-example</url>
   <inceptionYear>2021</inceptionYear>

   <licenses>
      <license>
         <name>MIT License</name>
         <url>http://www.opensource.org/licenses/mit-license.php</url>
         <distribution>repo</distribution>
      </license>
   </licenses>

   <!-- ********************************************** -->
   <!-- ************ RESOURCES AND SERVICES ********** -->
   <!-- ********************************************** -->

   <scm>
      <connection>scm:git:https://github.com/bernardo-mg/no-sql-spring-example.git</connection>
      <developerConnection>scm:git:https://github.com/bernardo-mg/no-sql-spring-example.git</developerConnection>
      <tag>head</tag>
      <url>https://www.github.com/bernardo-mg/no-sql-spring-example</url>
   </scm>

   <issueManagement>
      <system>GitHub</system>
      <url>https://www.github.com/bernardo-mg/no-sql-spring-example/issues</url>
   </issueManagement>

   <ciManagement>
      <system>Github</system>
      <url>https://www.github.com/bernardo-mg/no-sql-spring-example/actions</url>
      <notifiers />
   </ciManagement>

   <distributionManagement>
      <repository>
         <uniqueVersion>false</uniqueVersion>
         <id>releases</id>
         <name>Releases Repository</name>
         <url>https://api.bintray.com/maven/bernardo-mg/maven/no-sql-spring-example</url>
      </repository>
      <snapshotRepository>
         <uniqueVersion>false</uniqueVersion>
         <id>snapshots</id>
         <name>Snapshots Repository</name>
         <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
      </snapshotRepository>
   </distributionManagement>

   <!-- ********************************************** -->
   <!-- ****************** PROFILES ****************** -->
   <!-- ********************************************** -->

   <profiles>
      <profile>
         <!-- Profile for the Eclipse Maven plugin -->
         <!-- Sets the POM so this plugin does not give the usual unregistered goals errors -->
         <!-- It will be activated automatically on Eclipse if this has the m2e plugin, by detecting the version property -->
         <id>eclipse-maven</id>
         <activation>
            <property>
               <name>m2e.version</name>
            </property>
         </activation>
         <build>
            <pluginManagement>
               <plugins>
                  <plugin>
                     <!-- m2e lifecycle mapping -->
                     <!-- This is used to configure the Maven plugin for Eclipse. -->
                     <!-- Among other things, it allows registering goals, which Eclipse would otherwise reject. -->
                     <!-- It has no real effect on Maven. -->
                     <groupId>org.eclipse.m2e</groupId>
                     <artifactId>lifecycle-mapping</artifactId>
                     <version>${plugin.lifecycle.version}</version>
                     <configuration>
                        <!-- Sample fix for plugin executions -->
                        <!-- This is to be used in case a Maven plugins gives problems in Eclipse -->
                        <!-- <lifecycleMappingMetadata> <pluginExecutions> <pluginExecution> <pluginExecutionFilter> <groupId>org.jacoco</groupId> <artifactId>jacoco-maven-plugin</artifactId> <versionRange>[0.5,)</versionRange> 
                           <goals> <goal>prepare-agent</goal> </goals> </pluginExecutionFilter> <action> <ignore /> </action> </pluginExecution> </pluginExecutions> </lifecycleMappingMetadata> -->
                        <downloadSources>true</downloadSources>
                        <downloadJavadocs>true</downloadJavadocs>
                     </configuration>
                  </plugin>
               </plugins>
            </pluginManagement>
         </build>
      </profile>
      <!-- ============================================== -->
      <!-- =============== BUILD PROFILES =============== -->
      <!-- ============================================== -->
      <profile>
         <!-- Production profile -->
         <id>production</id>
         <activation>
            <property>
               <name>env.ENVIRONMENT_MODE</name>
               <value>production</value>
            </property>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <!-- Frontend Plugin -->
                  <groupId>com.github.eirslett</groupId>
                  <artifactId>frontend-maven-plugin</artifactId>
                  <configuration>
                     <installDirectory>target</installDirectory>
                  </configuration>
                  <executions>
                     <execution>
                        <!-- Builds the frontend -->
                        <id>frontend-build</id>
                        <goals>
                           <goal>npm</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                           <arguments>run build --prod</arguments>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <!-- Production profile -->
         <id>development</id>
         <build>
            <plugins>
               <plugin>
                  <!-- Frontend Plugin -->
                  <groupId>com.github.eirslett</groupId>
                  <artifactId>frontend-maven-plugin</artifactId>
                  <configuration>
                     <installDirectory>target</installDirectory>
                  </configuration>
                  <executions>
                     <execution>
                        <!-- Builds the frontend -->
                        <id>frontend-build</id>
                        <goals>
                           <goal>npm</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                           <arguments>run build</arguments>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
         <dependencies>
            <dependency>
               <!-- Spring Boot Starter: Devtools -->
               <groupId>org.springframework.boot</groupId>
               <artifactId>spring-boot-devtools</artifactId>
               <version>${spring.boot.version}</version>
               <scope>runtime</scope>
               <optional>true</optional>
            </dependency>
            <dependency>
               <!-- Spring Boot Starter: Neo4J Migrations -->
               <groupId>eu.michael-simons.neo4j</groupId>
               <artifactId>neo4j-migrations-spring-boot-starter</artifactId>
               <version>${spring.boot.neo4j.migrations.version}</version>
            </dependency>
         </dependencies>
      </profile>
      <!-- ============================================== -->
      <!-- ============ DEPLOYMENT PROFILES ============= -->
      <!-- ============================================== -->
      <profile>
         <!-- Release site deployment profile -->
         <!-- Sets the site repository to point to the releases repo -->
         <id>deployment-release</id>
         <activation>
            <!-- Active by default so the repository appears in the reports -->
            <activeByDefault>true</activeByDefault>
         </activation>
         <distributionManagement>
            <site>
               <id>site</id>
               <name>Project Documentation Site</name>
               <!-- The URL should be set externally -->
               <url>${site.release.url}</url>
            </site>
         </distributionManagement>
      </profile>
      <profile>
         <!-- Development site deployment profile -->
         <!-- Sets the site repository to point to the development repo -->
         <id>deployment-development</id>
         <distributionManagement>
            <site>
               <id>site-development</id>
               <name>Project Development Documentation Site</name>
               <!-- The URL should be set externally -->
               <url>${site.develop.url}</url>
            </site>
         </distributionManagement>
      </profile>
      <profile>
         <!-- Deployment profile -->
         <!-- Sets ups the environment for deployment -->
         <id>deployment</id>
         <properties>
            <!-- Tests are skipped -->
            <maven.test.skip>true</maven.test.skip>
         </properties>
      </profile>
   </profiles>

   <!-- ********************************************** -->
   <!-- *********** ORGANIZATION AND MEMBERS ********* -->
   <!-- ********************************************** -->

   <organization>
      <name>Bernardo Martínez Garrido</name>
      <url>https://github.com/Bernardo-MG</url>
   </organization>

   <developers>
      <developer>
         <id>bmg</id>
         <name>Bernardo Martínez Garrido</name>
         <email>programming@bernardomg.com</email>
         <url>https://github.com/Bernardo-MG</url>
         <organization>Bernardo Martínez Garrido</organization>
         <organizationUrl>https://github.com/Bernardo-MG</organizationUrl>
         <roles>
            <role>Developer</role>
         </roles>
         <timezone>+1</timezone>
         <properties />
      </developer>
   </developers>

   <!-- ********************************************** -->
   <!-- **************** PROPERTIES ****************** -->
   <!-- ********************************************** -->

   <properties>
      <!-- ============================================== -->
      <!-- =============== MAVEN VERSION ================ -->
      <!-- ============================================== -->
      <maven.version>3.5.0</maven.version>
      <!-- ============================================== -->
      <!-- ================ JAVA VERSION ================ -->
      <!-- ============================================== -->
      <java.version>1.8</java.version>
      <!-- ============================================== -->
      <!-- =============== MANIFEST DATA ================ -->
      <!-- ============================================== -->
      <manifest.name>com/bernardomg/jqassistant/test</manifest.name>
      <!-- ============================================== -->
      <!-- =============== TEMPLATE INFO ================ -->
      <!-- ============================================== -->
      <view.keywords>"keywords"</view.keywords>
      <site.url>https://application.com</site.url>
      <social.twitter>@BernardoMartG</social.twitter>
      <!-- ============================================== -->
      <!-- ============= NODE ENVIRONMENT =============== -->
      <!-- ============================================== -->
      <node.env.api>http://localhost:8080</node.env.api>
      <node.env.appVersion>v${project.version}</node.env.appVersion>
      <node.env.repoUrl>${project.scm.url}</node.env.repoUrl>
      <node.env.inputPath>./src/main/js/</node.env.inputPath>
      <node.env.outputPath>./target/classes/static/</node.env.outputPath>
      <node.env.modules>./node_modules</node.env.modules>
      <!-- ============================================== -->
      <!-- =========== DEPENDENCIES VERSIONS ============ -->
      <!-- ============================================== -->
      <aspectj.version>1.9.6</aspectj.version>
      <caffeine.version>2.6.2</caffeine.version>
      <classgraph.version>4.8.104</classgraph.version>
      <commons.lang.version>3.10</commons.lang.version>
      <glassfish.el.version>2.2</glassfish.el.version>
      <graphql.version>11.0.1</graphql.version>
      <guava.version>30.1.1-jre</guava.version>
      <hamcrest.version>2.2</hamcrest.version>
      <hibernate.validator.version>5.4.3.Final</hibernate.validator.version>
      <hibernate.version>5.4.21.Final</hibernate.version>
      <hikari.version>3.4.5</hikari.version>
      <jackson.version>2.12.2</jackson.version>
      <javaee.api.version>2.2</javaee.api.version>
      <javassist.version>3.25.0-GA</javassist.version>
      <jsonpath.version>2.5.0</jsonpath.version>
      <junit.jupiter.version>5.7.1</junit.jupiter.version>
      <log4j.version>2.14.1</log4j.version>
      <mockito.version>3.9.0</mockito.version>
      <neo4j.test.version>4.1.1</neo4j.test.version>
      <reactor.version>3.4.6</reactor.version>
      <servlet.version>4.0.1</servlet.version>
      <slf4j.version>1.7.30</slf4j.version>
      <spring.boot.graphql.version>11.0.0</spring.boot.graphql.version>
      <spring.boot.neo4j.migrations.version>0.1.3</spring.boot.neo4j.migrations.version>
      <spring.boot.version>2.4.4</spring.boot.version>
      <spring.data.train.version>2020.0.7</spring.data.train.version>
      <spring.version>5.3.5</spring.version>
      <thymeleaf.version>3.0.12.RELEASE</thymeleaf.version>
      <webappRunner.version>8.5.30.0</webappRunner.version>
      <!-- ============================================== -->
      <!-- ============== PLUGINS VERSIONS ============== -->
      <!-- ============================================== -->
      <plugin.frontend.node.version>v14.15.5</plugin.frontend.node.version>
      <plugin.frontend.npm.version>6.14.11</plugin.frontend.npm.version>
      <plugin.frontend.version>1.11.2</plugin.frontend.version>
      <plugin.spring.boot.version>${spring.boot.version}</plugin.spring.boot.version>
      <!-- ============================================== -->
      <!-- ================= MAVEN SITE ================= -->
      <!-- ============================================== -->
      <site.skin.version>2.1.0</site.skin.version>
   </properties>

   <!-- ********************************************** -->
   <!-- *************** DEPENDENCIES ***************** -->
   <!-- ********************************************** -->

   <dependencyManagement>
      <dependencies>
         <dependency>
            <!-- Spring Framework BOM -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-framework-bom</artifactId>
            <version>${spring.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <!-- Spring Data BOM -->
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-bom</artifactId>
            <version>${spring.data.train.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <!-- Jackson BOM -->
            <groupId>com.fasterxml.jackson</groupId>
            <artifactId>jackson-bom</artifactId>
            <version>${jackson.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <!-- JUnit BOM -->
            <groupId>org.junit</groupId>
            <artifactId>junit-bom</artifactId>
            <version>${junit.jupiter.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>

   <dependencies>
      <!-- ============================================== -->
      <!-- ================== SPRING ==================== -->
      <!-- ============================================== -->
      <dependency>
         <!-- Spring AOP -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-aop</artifactId>
      </dependency>
      <dependency>
         <!-- Spring beans -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-beans</artifactId>
      </dependency>
      <dependency>
         <!-- Spring context -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-context</artifactId>
      </dependency>
      <dependency>
         <!-- Spring context support -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-context-support</artifactId>
      </dependency>
      <dependency>
         <!-- Spring Core -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-core</artifactId>
      </dependency>
      <dependency>
         <!-- Spring JDBC -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-jdbc</artifactId>
      </dependency>
      <dependency>
         <!-- Spring OXM -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-oxm</artifactId>
      </dependency>
      <dependency>
         <!-- Spring transactions -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-tx</artifactId>
      </dependency>
      <dependency>
         <!-- Spring Web -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-web</artifactId>
      </dependency>
      <dependency>
         <!-- Spring Web MVC -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-webmvc</artifactId>
      </dependency>
      <dependency>
         <!-- Spring ORM -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-orm</artifactId>
      </dependency>
      <!-- ============================================== -->
      <!-- =============== SPRING BOOT ================== -->
      <!-- ============================================== -->
      <dependency>
         <!-- Spring Boot Starter: Thymeleaf -->
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-thymeleaf</artifactId>
         <version>${spring.boot.version}</version>
         <exclusions>
            <exclusion>
               <groupId>org.springframework.boot</groupId>
               <artifactId>spring-boot-starter-logging</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <!-- Spring Boot Starter: Web -->
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-web</artifactId>
         <version>${spring.boot.version}</version>
      </dependency>
      <dependency>
         <!-- Spring Boot Starter: Neo4J -->
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-data-neo4j</artifactId>
         <version>${spring.boot.version}</version>
      </dependency>
      <dependency>
         <!-- Spring Boot Starter: AOP -->
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-aop</artifactId>
         <version>${spring.boot.version}</version>
      </dependency>
      <dependency>
         <!-- Spring Boot Starter: Cache -->
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-cache</artifactId>
         <version>${spring.boot.version}</version>
      </dependency>
      <dependency>
         <!-- Spring Boot Starter: log4j -->
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-log4j2</artifactId>
         <version>${spring.boot.version}</version>
      </dependency>
      <dependency>
         <!-- Spring Boot Starter: GraphQL -->
         <groupId>com.graphql-java-kickstart</groupId>
         <artifactId>graphql-spring-boot-starter</artifactId>
         <version>${spring.boot.graphql.version}</version>
      </dependency>
      <!-- ============================================== -->
      <!-- ================= ASPECTJ ==================== -->
      <!-- ============================================== -->
      <dependency>
         <!-- AspectJ Runtime -->
         <groupId>org.aspectj</groupId>
         <artifactId>aspectjrt</artifactId>
         <version>${aspectj.version}</version>
      </dependency>
      <dependency>
         <!-- AspectJ Weaver -->
         <groupId>org.aspectj</groupId>
         <artifactId>aspectjweaver</artifactId>
         <version>${aspectj.version}</version>
         <scope>runtime</scope>
      </dependency>
      <!-- ============================================== -->
      <!-- ================= GRAPHQL ==================== -->
      <!-- ============================================== -->
      <dependency>
         <!-- GraphQL Java Tools -->
         <groupId>com.graphql-java-kickstart</groupId>
         <artifactId>graphql-java-tools</artifactId>
         <version>${graphql.version}</version>
      </dependency>
      <!-- ============================================== -->
      <!-- ================ SERVLET ===================== -->
      <!-- ============================================== -->
      <dependency>
         <!-- Servlet API -->
         <groupId>javax.servlet</groupId>
         <artifactId>javax.servlet-api</artifactId>
         <version>${servlet.version}</version>
         <scope>provided</scope>
      </dependency>
      <!-- ============================================== -->
      <!-- ================ THYMELEAF =================== -->
      <!-- ============================================== -->
      <dependency>
         <groupId>org.thymeleaf</groupId>
         <artifactId>thymeleaf</artifactId>
         <version>${thymeleaf.version}</version>
      </dependency>
      <dependency>
         <groupId>org.thymeleaf</groupId>
         <artifactId>thymeleaf-spring5</artifactId>
         <version>${thymeleaf.version}</version>
      </dependency>
      <!-- ============================================== -->
      <!-- ================== LOGGING =================== -->
      <!-- ============================================== -->
      <dependency>
         <!-- SL4J API -->
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
         <version>${slf4j.version}</version>
      </dependency>
      <dependency>
         <!-- Log4j SLF4J Bridge -->
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-slf4j-impl</artifactId>
         <version>${log4j.version}</version>
      </dependency>
      <dependency>
         <!-- Log4j core -->
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-core</artifactId>
         <version>${log4j.version}</version>
      </dependency>
      <dependency>
         <!-- Log4j Commons Logging Bridge -->
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-jcl</artifactId>
         <version>${log4j.version}</version>
      </dependency>
      <dependency>
         <!-- Log4j Web -->
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-web</artifactId>
         <version>${log4j.version}</version>
      </dependency>
      <!-- ============================================== -->
      <!-- ================= JACKSON ==================== -->
      <!-- ============================================== -->
      <dependency>
         <!-- Jackson -->
         <groupId>com.fasterxml.jackson.core</groupId>
         <artifactId>jackson-core</artifactId>
      </dependency>
      <dependency>
         <!-- Jackson databinding -->
         <groupId>com.fasterxml.jackson.core</groupId>
         <artifactId>jackson-databind</artifactId>
      </dependency>
      <dependency>
         <!-- Jackson annotations -->
         <groupId>com.fasterxml.jackson.core</groupId>
         <artifactId>jackson-annotations</artifactId>
      </dependency>
      <!-- ============================================== -->
      <!-- ============ OTHER DEPENDENCIES ============== -->
      <!-- ============================================== -->
      <dependency>
         <!-- Guava -->
         <groupId>com.google.guava</groupId>
         <artifactId>guava</artifactId>
         <version>${guava.version}</version>
      </dependency>
      <dependency>
         <!-- Javax EL implementation -->
         <groupId>org.glassfish.web</groupId>
         <artifactId>el-impl</artifactId>
         <version>${glassfish.el.version}</version>
         <scope>provided</scope>
      </dependency>
      <!-- ============================================== -->
      <!-- =========== VERSION ENFORCEMENT ============== -->
      <!-- ============================================== -->
      <dependency>
         <!-- Classgraph -->
         <groupId>io.github.classgraph</groupId>
         <artifactId>classgraph</artifactId>
         <version>${classgraph.version}</version>
      </dependency>
      <dependency>
         <!-- Javassist -->
         <groupId>org.javassist</groupId>
         <artifactId>javassist</artifactId>
         <version>${javassist.version}</version>
      </dependency>
      <dependency>
         <!-- Commons Lang -->
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-lang3</artifactId>
         <version>${commons.lang.version}</version>
      </dependency>
      <!-- ============================================== -->
      <!-- ======= TEST ENVIRONMENT DEPENDENCIES ======== -->
      <!-- ============================================== -->
      <dependency>
         <!-- Hamcrest -->
         <groupId>org.hamcrest</groupId>
         <artifactId>hamcrest-core</artifactId>
         <version>${hamcrest.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- JSON Path -->
         <groupId>com.jayway.jsonpath</groupId>
         <artifactId>json-path</artifactId>
         <version>${jsonpath.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- JUnit Jupiter Engine -->
         <groupId>org.junit.jupiter</groupId>
         <artifactId>junit-jupiter-engine</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- JUnit Jupiter Platform -->
         <groupId>org.junit.platform</groupId>
         <artifactId>junit-platform-runner</artifactId>
         <scope>test</scope>
         <exclusions>
            <exclusion>
               <!-- JUnit 3 -->
               <groupId>junit</groupId>
               <artifactId>junit</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <!-- Mockito -->
         <groupId>org.mockito</groupId>
         <artifactId>mockito-core</artifactId>
         <version>${mockito.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Spring Test -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-test</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Spring Boot Starter: Test -->
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-test</artifactId>
         <version>${spring.boot.version}</version>
         <scope>test</scope>
         <exclusions>
            <exclusion>
               <groupId>org.junit.vintage</groupId>
               <artifactId>junit-vintage-engine</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <!-- Neo4j Test Harness -->
         <groupId>org.neo4j.test</groupId>
         <artifactId>neo4j-harness</artifactId>
         <version>${neo4j.test.version}</version>
         <scope>test</scope>
         <exclusions>
            <exclusion>
               <groupId>org.slf4j</groupId>
               <artifactId>slf4j-nop</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <!-- Reactor core -->
         <groupId>io.projectreactor</groupId>
         <artifactId>reactor-core</artifactId>
         <version>${reactor.version}</version>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <!-- ********************************************** -->
   <!-- ******************* BUILD ******************** -->
   <!-- ********************************************** -->

   <build>
      <defaultGoal>clean package</defaultGoal>
      <resources>
         <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
         </resource>
      </resources>
      <pluginManagement>
         <plugins>
            <plugin>
               <!-- Frontend Plugin -->
               <groupId>com.github.eirslett</groupId>
               <artifactId>frontend-maven-plugin</artifactId>
               <version>${plugin.frontend.version}</version>
            </plugin>
         </plugins>
      </pluginManagement>
      <plugins>
         <plugin>
            <!-- Build helper -->
            <!-- Adds the generated files to the Maven classpath -->
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
               <execution>
                  <id>add-source</id>
                  <goals>
                     <goal>add-source</goal>
                  </goals>
                  <configuration>
                     <sources>
                        <!-- JS sources -->
                        <source>${project.basedir}/src/main/js</source>
                        <!-- JS tests -->
                        <source>${project.basedir}/src/test/js</source>
                     </sources>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <!-- Changes -->
            <!-- Takes care of the changes log -->
            <!-- It is set to also validate the changes log file -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-changes-plugin</artifactId>
            <executions>
               <!-- Changes plugin is bound to the pre-site phase -->
               <execution>
                  <id>check-changes</id>
                  <phase>pre-site</phase>
                  <goals>
                     <goal>changes-check</goal>
                  </goals>
               </execution>
               <execution>
                  <id>validate-changes</id>
                  <phase>pre-site</phase>
                  <goals>
                     <goal>changes-validate</goal>
                  </goals>
                  <configuration>
                     <failOnError>true</failOnError>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <!-- Frontend Plugin -->
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <configuration>
               <installDirectory>target</installDirectory>
            </configuration>
            <executions>
               <execution>
                  <!-- Installs the frontend frameworks -->
                  <!-- Installs Node and npm -->
                  <id>frontend-framework</id>
                  <goals>
                     <goal>install-node-and-npm</goal>
                  </goals>
                  <configuration>
                     <nodeVersion>${plugin.frontend.node.version}</nodeVersion>
                     <npmVersion>${plugin.frontend.npm.version}</npmVersion>
                  </configuration>
               </execution>
               <execution>
                  <!-- Installs the frontend dependencies -->
                  <!-- Installs npm dependencies -->
                  <id>frontend-dependencies</id>
                  <goals>
                     <goal>npm</goal>
                  </goals>
                  <configuration>
                     <arguments>install</arguments>
                  </configuration>
               </execution>
               <execution>
                  <!-- Runs the frontend tests -->
                  <id>frontend-test</id>
                  <goals>
                     <goal>npm</goal>
                  </goals>
                  <phase>test</phase>
                  <configuration>
                     <arguments>test -- --configuration=ci</arguments>
                  </configuration>
               </execution>
               <execution>
                  <!-- Runs the end to end tests -->
                  <id>frontend-e2e-test</id>
                  <goals>
                     <goal>npm</goal>
                  </goals>
                  <phase>test</phase>
                  <configuration>
                     <arguments>run e2e -- --configuration=ci</arguments>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <!-- Resources -->
            <!-- Handles the project resources. -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <configuration>
               <!-- Variables to to override will be delimited with a @. -->
               <!-- This avoids collisions with Spring variables. -->
               <!-- So instead of replacing ${project.name} Maven will replace @project.name@. -->
               <useDefaultDelimiters>false</useDefaultDelimiters>
               <delimiters>
                  <delimiter>@</delimiter>
               </delimiters>
            </configuration>
         </plugin>
         <plugin>
            <!-- Site -->
            <!-- Generates the Maven Site -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-site-plugin</artifactId>
            <dependencies>
               <dependency>
                  <!-- Docs Maven Skin -->
                  <groupId>com.bernardomg.maven.skins</groupId>
                  <artifactId>docs-maven-skin</artifactId>
                  <version>${site.skin.version}</version>
               </dependency>
            </dependencies>
         </plugin>
         <plugin>
            <!-- WAR -->
            <!-- Generates the WAR package. -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
               <webResources>
                  <resource>
                     <!-- The UI template is filtered -->
                     <filtering>true</filtering>
                     <directory>${project.basedir}/src/main/resources/templates</directory>
                     <targetPath>WEB-INF/templates</targetPath>
                     <includes>
                        <include>index.html</include>
                     </includes>
                  </resource>
               </webResources>
               <!-- Variables to to override will be delimited with a @. -->
               <!-- This avoids collisions with Spring variables. -->
               <!-- So instead of replacing ${project.name} Maven will replace @project.name@. -->
               <useDefaultDelimiters>false</useDefaultDelimiters>
               <delimiters>
                  <delimiter>@</delimiter>
               </delimiters>
            </configuration>
         </plugin>
         <plugin>
            <!-- Spring Boot -->
            <!-- Takes care of running Spring Boot application -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <version>${plugin.spring.boot.version}</version>
            <executions>
               <execution>
                  <goals>
                     <goal>repackage</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>

   <!-- ********************************************** -->
   <!-- ****************** REPORTS ******************* -->
   <!-- ********************************************** -->

   <reporting>
      <plugins>
         <plugin>
            <!-- Checkstyle -->
            <!-- Checks that the source files comply with style standards -->
            <!-- It is using a customized rules file -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <configuration>
               <!-- The customized rules file -->
               <configLocation>${project.basedir}/src/config/checkstyle/checkstyle-rules.xml</configLocation>
            </configuration>
         </plugin>
         <plugin>
            <!-- PMD -->
            <!-- Checks that the code complies with a series of code quality rules -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <configuration>
               <rulesets>
                  <!-- The customized rules file -->
                  <ruleset>${project.basedir}/src/config/pmd/pmd-rules.xml</ruleset>
               </rulesets>
            </configuration>
         </plugin>
      </plugins>
   </reporting>

</project>
